/* Monopoly SCSS */
/* Created by Ceri Woolway beginning October 2020 */

// General colours
$lightgreen  : #d5e8d4;
$black       : #000;


// Property colours

$brown      : #824c26;
$lightblue  : #99d1f4;
$pink       : #d52788;
$orange     : #f1970b;
$red        : #db0926;
$yellow     : #e9ed38;
$green      : #0aa959;
$darkblue   : #3e64ad;


$border: 3px solid $black;

// TODO - do something more stylised with this.
@mixin disabledButton{
    background: #ccc;
    color: rgb(143, 143, 143);
    pointer-events: none;
}

/* @font-face kit by Fonts2u (https://fonts2u.com) */
@font-face {font-family:"Kabel-Heavy";src:url("fonts/Kabel-Heavy.eot?") format("eot"),url("fonts/Kabel-Heavy.woff") format("woff"),url("fonts/Kabel-Heavy.ttf") format("truetype"),url("fonts/Kabel-Heavy.svg#Kabel-Heavy") format("svg");font-weight:normal;font-style:normal;}

body{
    font-family: 'Kabel-Heavy', sans-serif;
    font-size: 24px;
    min-height: 100vh;
    padding: 0;
    margin: 0;
    background: $lightgreen;
}

main{
    padding: 15px;
    margin: 0;
    display: flex;
    //flex-direction: column;
    align-items: center;
    justify-content: space-between; 
    text-align: center;
}

button{
    padding: 10px;
    background: #000;
    color: #fff;
    text-transform: uppercase;
    border: none;
    font-weight: bold;
    font-family: 'Kabel-Heavy', sans-serif;
    font-size: 0.6em;
    cursor: pointer;
    border: none;
    border-radius: 0;
}

*:focus{
    outline: none;
}

/* width */
::-webkit-scrollbar {
    width: 10px;
  }
  
  /* Track */
  ::-webkit-scrollbar-track {
    background: #f1f1f1;
  }
  
  /* Handle */
  ::-webkit-scrollbar-thumb {
    background: $lightgreen;
  }
  
  /* Handle on hover */
  ::-webkit-scrollbar-thumb:hover {
    background: darken($lightgreen, 10%);
  }

/* PLAYER CREATOR ----------------------------------------------------------- */

#new-player-overlay{
    background: $lightgreen url('images/city.svg') center bottom no-repeat;
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: 100;
    text-align: center;
    display: flex;
    align-items: center;
    padding: 30px;
    flex-direction: column;
}

#new-player-overlay h1,
.new-game-dice-roll h2{
    background: $red;
    color: #fff;
    padding: 10px 20px;
    border: 10px solid #fff;
    text-shadow: 3px 3px 0 black;
    width: 650px;
    box-shadow: 0 0 10px rgba(black, 0.5), inset 0 -10px 20px rgba(0, 0, 0, 0.3);
    max-width: 100%;
    float: none;
    margin: 0 auto 20px;
}

#begin-game,
.new-game-dice-roll button{
    background: $red;
    margin-top: 20px;
    border: 2px solid #fff;
    box-shadow: 0 0 10px rgba(black, 0.5);
    font-size: 0.8em;
    transition: 0.2s;

    &:hover{
        background: darken($red, 5%);
    }
}


#player-creator{
    display: flex;
    align-items: center;
    justify-content: center;
    flex-wrap: wrap;
    background: rgba($lightgreen, 0.9);
    border-radius: 10px;

    & > div{
        animation: zoomIn 0.5s both;
    }

    & > div:nth-child(2){
        animation-delay: 0.2s;
    }

    & > div:last-child.add-player-button{
        animation-delay: 0.4s;
    }
}

.player-creation-panel{
    padding: 20px;
    background: #fff;
    border-radius: 10px;
    margin: 10px;
    min-width: 200px;
    animation: zoomIn 0.5s both;

    h2{
        font-size: 1em;
        margin-bottom: 10px;
    }

    input{
        text-align: center;
        border: none;
        border-bottom: 1px solid #000;
        padding: 10px 0;
    }

    ::placeholder{
        font-style: italic;
    }
}

.add-player-button{
    background: darken($lightgreen, 10%);
    border-radius: 10px;
    align-self: stretch;
    min-width: 150px;
    padding: 20px;
    margin: 10px;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    color: #60875E;
    animation: zoomIn 0.5s both;

    img{
        margin-top: 15px;
        width: 35px;
    }
}

/* TOKEN SELECTOR ----------------------------------------------------------- */

$token-selector-grey:  #dbdbdb;

.token-selector{
    position: relative;
    margin: 15px 0;
}

.available-token-choices{
    display: flex;
    justify-content: center;
    flex-wrap: wrap;
    max-width: 200px;
    background: $token-selector-grey;
    border-radius: 10px;
    position: absolute;
    top: calc(100% + 10px);
    box-shadow: 0 0 10px rgba(black, 0.2);

    &:before{
        content: '';
        width: 0;
        height: 0;
        border-style: solid;
        border-width: 0 15px 15px 15px;
        border-color: transparent transparent $token-selector-grey transparent;
        position: absolute;
        top: -15px;
        left: calc(50% - 15px);
    }
}

.token-option,
.token-selector-chosen-indicator{
    width: 70px;
    height: 70px;
}

.token-selector-chosen-indicator{
    float: none;
    margin: 0 auto;
    position: relative;
    border: 1px solid $token-selector-grey;
    border-radius: 50%;
    background-size: 50px;
    background-position: center;
    background-repeat: no-repeat;
    cursor: pointer;

    &:after{
        content: '';
        width: 25px;
        height: 25px;
        background: $token-selector-grey url('images/pen.svg') center no-repeat;
        background-size: 15px;
        border-radius: 50%;
        position: absolute;
        right: -6px;
        bottom: -6px;
        transition: 0.2s;
    }

    &:hover:after{
        background-color: darken($token-selector-grey, 15%);
    }
}

.available-token-choices .token-option{
    width: 40px;
    height: 40px;
    margin: 4px;
    border: 1px solid transparent;
    border-radius: 50%;
    background-size: 35px;
    background-position: center;
    background-repeat: no-repeat;
}

.available-token-choices .token-option:hover{
    background-color: #fff;
    box-shadow: 0 0 10px rgba(black, 0.2);
}

$tokens:
    'dog',
    'iron',
    'thimble',
    'car',
    'battleship',
    'hat',
    'penguin',
    'dinosaur',
    'cat',
    'ducky',
    'thimble'
;

@each $token in $tokens{
    .token-option-#{$token},
    .token-selector-chosen-indicator[chosentoken="#{$token}"]{
        background-image: url('images/tokens/#{$token}.svg');
    }
}

/* NEW GAME DICE ROLL ------------------------------------------------------- */

.new-game-dice-roll{
    position: fixed;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: 100;
    background: $lightgreen url('images/dice-screen-background.svg') right center no-repeat;
    background-size: auto 75vh;
    color: #000;
    padding: 30px;
    text-align: center;
    overflow: auto;
    transition: 0.5s;
    
    & > *{
        animation: fadeIn 0.5s linear both;
    }


    h2, h3{
        text-transform: uppercase;
    }

    .winner-annoucement{
        font-size: 30px;
        margin: 20px 0;
        min-height: 100px;
        display: flex;
        align-items: center;
        justify-content: center;
    }
}

.dice-roll-container{
    display: flex;
    flex-wrap: wrap;
    justify-content: center;

    & > div{
        flex-basis: 250px;
    }
}

.new-player-dice-roll{
    background: #fff;
    border-radius: 10px;
    padding: 20px;
    display: grid;
    grid-template-rows: auto auto auto;
    grid-template-columns: auto 50px 50px auto;
    text-align: center;
    margin: 10px;
    transition: 0.3s;

    img{
        max-width: 50px;
        grid-row: 1 / 1;
        grid-column: 1 / 5;
        float: none;
        margin: 0 auto;
    }

    h3{
        margin: 0 0 20px;
        font-size: 1em;
        grid-row: 2 / 2;
        grid-column: 1 / 5;
    }

    .dice-container{
        grid-row: 3 / 4;
        grid-column: 1 / 5;
        display: flex;
        align-items: center;
        justify-content: center;

        span:not(.dice){
            padding: 0 10px;
        }
    }

    .dice{
        display: inline-block
    }

    .total{
        min-width: 40px;
        font-size: 1.7em;
        min-height: 70px;
        display: flex;
        align-items: center;
        justify-content: flex-end;
        padding: 0 !important;
    }


    &.losing-dice-roll{
        opacity: 0.15;
    }

    &.winning-dice-roll{
        background: $green;
        color: #fff;
    }
}

/* BOARD --------------------------------------------------------------------- */

$columnsize: 80px;

#board{
    border: $border;
    display: grid;
    grid-template-columns: $columnsize auto $columnsize;
    grid-template-rows: $columnsize auto $columnsize;
    max-width: 900px;
    position: relative;
}

#south{
    grid-column: 2 / 4;
    grid-row: 3 / 4;

    display: flex;
    flex-direction: row-reverse;

    //display: grid;
    //grid-template-columns: auto auto auto auto auto auto auto auto auto auto $columnsize;

    & > div{
        //grid-row: 1 / 1;
        // I'm sure this shouldn't be necessary, but I can't figure out how to get rid of the excess rows right now.

        border-left: $border;
        border-top: $border;
    }

    & > div:last-child{
        border-left: none;
    }

}

@for $i from 1 through 10 {
    #south > div:nth-child(#{$i}){
        grid-column-start: (13 - $i);
        grid-column-end: (12 - $i);
    }
  }

#west{
    grid-column: 1 / 2;
    grid-row: 2 / 4;
    flex-direction: column-reverse;

    & > div{
        border-right: $border;
        border-top: $border;
    }

    & > div:last-child{
        border-top: none;
    }
}

#north{
    grid-column: 1 / 3;
    grid-row: 1 / 2;

    & > div{
        border-right: $border;
        border-bottom: $border;
    }

    & > div:last-child{
        border-right: none
    }
}

#east{
    grid-column: 3 / 4;
    grid-row: 1 / 3;
    flex-direction: column;

    & > div{
        border-left: $border;
        border-bottom: $border;
    }

    & > div:last-child{
        border-bottom: none;
    }
}

.corner.special{
    flex-basis: $columnsize;
    flex-grow: unset;
    flex-shrink: unset;
}

.row{
    display: flex;
    //overflow: hidden;
}

.row > div{
    flex-grow: 1;
    flex-shrink: 1;
    box-sizing: border-box;
    flex-basis: 7%;
    //font-size: 1vw;
}

#board .row > .property,
#board .row > .community-chest,
#board .row > .special,
#board .row > .station,
#board .row > .chance,
#board .row > .utility{
    //border-top: $border;
    //border-left: $border;
    padding: 5px;
    text-align: center;
    font-size: 10px;
    min-height: 50px;
}




/* Normal property -----------------------------------------------------------*/

.property{
    position: relative;
    padding-top: 20px !important;
    text-align: center;

    &:before{
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 10px;
        border-bottom: $border;
    }
}

.property.brown:before{background: $brown;}
.property.lightblue:before{background: $lightblue;}
.property.pink:before{background: $pink;}
.property.orange:before{background: $orange;}
.property.red:before{background: $red;}
.property.yellow:before{background: $yellow;}
.property.green:before{background: $green;}
.property.darkblue:before{background: $darkblue;}

.property-price{
    font-size: 14px;

    // TODO - removing pointer events on this lets clicks get through to the
    // space underneath which can then trigger a click event. There is
    // probably a better way of doing this though.
    pointer-events: none;
}

.row > div:not(.property) .property-house-display{
    display: none;
}

.property-house-display{
    position: absolute;
    top: -10px;
    left: 0;
    right: 0;
    display: flex;
    height: 25px;
    z-index: 10;


    & > div{
        background: url('images/house-on-property.svg') center no-repeat;
        background-size: contain;
        height: 20px;
        width: 20px;
        transform: scale(0);
        transition: 0.3s;
    }

    & > div:last-child{
        position: absolute;
        top: 0;
        left: calc(50% - 10px);
        background-image: url('images/hotel-on-property.svg');
    }
}


.row > .property[houses="1"] .property-house-display > div:nth-child(-n+1){transform: scale(1);}
.row > .property[houses="2"] .property-house-display > div:nth-child(-n+2){transform: scale(1);}
.row > .property[houses="3"] .property-house-display > div:nth-child(-n+3){transform: scale(1);}
.row > .property[houses="4"] .property-house-display > div:nth-child(-n+4){transform: scale(1);}

.row > .property[houses="5"] .property-house-display > div:nth-child(-n+4){transform: scale(0);}
.row > .property[houses="5"] .property-house-display > div:nth-child(n+5){transform: scale(1);}


/* Special property ----------------------------------------------------------*/

.community-chest{
    background: url('images/community-chest.svg') center no-repeat;
    background-size: contain;
}

.station{
    background: url('images/station.svg') center calc(100% - 2px) no-repeat;
    background-size: 40px;
}

.chance{
    background: url('images/chance.svg') center calc(100% - 6px) no-repeat;
    background-size: 50px;
}

/* Currency symbol -----------------------------------------------------------*/

.currencySymbol{
    display: inline-block;
    font-size: 80%;
    transform: rotate(180deg) translateY(5%);
    margin-top: -10%;
}

/* Dice ----------------------------------------------------------------------*/

.dice{
    width: 35px;
    height: 35px;
    background: #fff;
    border: $border;
    border-radius: 5px;
    background-size: contain;
}

@for $i from 1 through 6 {
    .dice-roll-#{$i},
    .dice[roll="#{$i}"]{
        background-image: url('images/dice-#{$i}.svg')
    }
  }

#doubles{
    font-size: 0.8em;
}

#dice-roll{
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 20px;

    span{
        padding: 10px;
    }

    #dice-total{
        font-weight: bold;
        font-size: 1.2em;
    }
}

.double1 .dice{
    background-color: $yellow;
}

.double2 .dice{
    background-color: $orange;
}

.double3 .dice,
.failed-jail-roll .dice{
    background-color: $red;
}

.successful-jail-roll .dice{
    background-color: $green;
}

/* Player tokens -------------------------------------------------------------*/

// Eventually there'll be mutliple token types, with each player being able to
// choose their token. This will do for now.
.token{
    //background: url('images/token.svg') center no-repeat;
    //background-size: 35px;
}

.token{
    width: 46px;
    height: 28px;
    position: absolute;
    z-index: 2;
    background-size: 35px;
    background-repeat: no-repeat;
    //background-position: center bottom;
    background-position: 7px -2px;
    
    // TODO - removing pointer events on this lets clicks get through to the
    // space underneath which can then trigger a click event. There is
    // probably a better way of doing this though.
    pointer-events: none;

    &:before{
        content: '';
        width: 100%;
        height: 28px;
        position: absolute;
        top: 0;
        bottom: 0;
        left: calc(50% - 23px);
        mix-blend-mode: multiply;
        border-radius: 25px;
        border: 2px solid #000;
    }

}


@each $token in $tokens{
    .token.#{$token}{
        background-image: url('images/tokens/#{$token}.svg');
    }
}

.player-bid-interface .player-token-icon[player="1"],
#player1summary .player-summary-header,
#player1token:before{
    background-color: yellow;
}

.player-bid-interface .player-token-icon[player="2"],
#player2summary .player-summary-header,
#player2token:before{background-color: cyan;}

.player-bid-interface .player-token-icon[player="3"],
#player3summary .player-summary-header,
#player3token:before{background-color: yellowgreen;}

.player-bid-interface .player-token-icon[player="4"],
#player4summary .player-summary-header,
#player4token:before{background-color: orange;}


/*
#player1token{
    background-position: left bottom;
}

#player2token{
    background-position: 33% bottom;
}

#player3token{
    background-position: 66% bottom;
}

#player4token{
    background-position: right bottom;
}
*/

/* Due to the way the JS calculates the correct position for the token and the 
   side the borders end up on, there are slightly irregularities. Likely
   not even noticeable but it bothers me otherwise */
.token[area="south"]{
    margin-left: 2px;
}

.token[area="north"]{
    margin-left: -3px;
}

.token[area="west"]{
    margin-left: -3px;
}






/* Popup ---------------------------------------------------------------------*/

#popup{
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 20px;
    background: rgba($black, 0.7);
    z-index: 100;
}

#popup-inner{
    background: #fff;
    border: $border;
    padding: 20px;
    width: 800px;
    max-width: 100%;
    position: relative;
    text-align: center;
    box-shadow: 0 0 20px rgba(black, 0.4);

}

#popup-close{
    width: 35px;
    position: absolute;
    top: 20px;
    right: 20px;
    z-index: 2;
}

body:not(.popup-open) #popup{
    display: none;
}

#popup-message{
    min-height: 100px;
}

body[close-popup="false"] #popup-close{
    display: none;
}

/* Jail  ---------------------------------------------------------------------*/

$jailAnimationLength: 1.5;

#jail-overlay{

    pointer-events: none;
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: 99;


    &:before{
        background: rgba(blue, 0.4);
        animation-delay: ($jailAnimationLength / 3) + s;
    }

    &:after{
        background: rgba(red, 0.4);
    }

    &:before,
    &:after{
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        bottom: 0;
        right: 0;
        animation-name: jailAnimation;
        animation-duration: ($jailAnimationLength) + s;
        animation-iteration-count: infinite;
    }
}

.bars{
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: 3;
}

.bars:first-child{
    background: url('images/jail-bars-1.png');
    animation: slideDown 0.6s both;
}

.bars:last-child{
    background: url('images/jail-bars-2.png');
    animation: slideUp 0.6s both;
}

.jailAnimation #jail-overlay{
    display: block;
    animation: fadeOut 0.7s;
    animation-delay: 2.3s;
}

.jailAnimation #token{
    animation: jailTokenAnimation 1s;
}



@keyframes jailAnimation{
    0%  {opacity: 0;}
    50% {opacity: 1;}
    100%{opacity: 0;}
}

@keyframes jailTokenAnimation{
    from {transform: scale(3);}
    to   {transform: scale(1);}
}





/* Player summary  -----------------------------------------------------------*/

#player-summary{
    display: flex;
    flex-direction: column;
    justify-content: space-around;
    box-sizing: border-box;
    flex-basis: 250px;

    h2{
        margin: 0;
        font-size: 1.1em;
        text-transform: uppercase;
    }

    & > div{
        padding: 10px 20px;
    }

    div{
        overflow: hidden;
    }
}

.player-summary-header{
    display: grid;
    grid-template-columns: 50px auto;
    grid-template-rows: auto auto;
    text-align: left;
    grid-column-gap: 16px;
    border: $border;
    padding: 5px 10px;

    .player-token-icon{
        background-size: contain;
        background-position: center;
        background-repeat: no-repeat;
        grid-row: 1 / span 2;
        position: relative;
        //background-color: #fff;
        height: 50px;
        background-size: 40px;
        top: 50%;
        margin-top: -25px;
        position: relative;

        &:after{
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            bottom: 0;
            right: 0;
            background: url('images/player-summary-jail-overlay.svg') center no-repeat;
            background-size: contain;
            background-position: 0 -50px;
            transition: 0.4s;
        }
    }
}

#player-summary > div[inJail="true"] .player-token-icon:after{
    background-position: 0 0;
}

@each $token in $tokens{
    .player-token-icon[token="#{$token}"]{
        background-image: url('images/tokens/#{$token}.svg');
        
    }
}


.good-change{
    animation: goodChangeAnimation 1s ease-in-out;
    transform-origin: left center;
}



.bad-change{
    animation: badChangeAnimation 1s ease-in-out;
    transform-origin: left center;
}



.spin-change{
    animation: spinAnimation 0.7s ease-in-out;
    transform-origin: center center;
}



.property-portfolio-title{
    background: $black;
    color: white;
    text-transform: uppercase;
    font-size: 0.6em;
    display: block;
    padding: 5px;
}

.property-portfolio{
    border: $border;
    padding: 10px;
    background: #fff;
    min-height: 55px;
    box-sizing: border-box;
}

.property-icon{
    width: 15px !important;
    height: 15px !important;
    border-radius: 50%;
    border: 2px solid $black;
    display: inline-block;
    margin: 2px;;
}

.property-icon.brown{background: $brown;}
.property-icon.lightblue{background: $lightblue;}
.property-icon.pink{background: $pink;}
.property-icon.orange{background: $orange;}
.property-icon.red{background: $red;}
.property-icon.yellow{background: $yellow;}
.property-icon.green{background: $green;}
.property-icon.darkblue{background: $darkblue;}

.property-icon.train-station,
.property-icon.utility{
    border: none;
    border-radius: 0;
    background-size: contain !important;
}

.property-icon.train-station{background: url('images/station.svg') center no-repeat;}
.property-icon.electric-company{background: url('images/electric-company.svg') center no-repeat;}
.property-icon.water-works{background: url('images/water-works.svg') center no-repeat;}




/* Full portfolio view  ------------------------------------------------------*/

.full-portfolio{
    display: flex;
    flex-wrap: wrap;
    position: relative;

    &:before{
        content: 'PLAYER PORTFOLIO';
        color: #fff;
        background: #000;
        position: absolute;
        bottom: calc(100% + 20px);
        left: -23px;
        right: -23px;
        padding: 10px;
    }
}

.full-portfolio-item{
    display: flex;
    align-items: center;
    width: 380px;

    & > div{
        margin: 0 0 0 10px;
    }
}

.full-portfolio-item .property-icon + div{
    margin-right: 20px;
}

.full-portfolio-house,
.full-portfolio-hotel{
    width: 25px;
    height: 25px;
    background: url('images/house-icon.svg') center no-repeat;
    background-size: contain;
}

.full-portfolio-hotel{
    background-image: url('images/hotel-icon.svg');
}

/* Player action buttons  ----------------------------------------------------*/

.player-action-button{
    display: none;
}

.current-player-summary .player-action-button{
    display: initial;
}


body[dice-roll-available="false"] .roll-dice-button,
body[end-turn-available="false"] .end-turn-button{
    pointer-events: none;
    @include disabledButton()
}

// I added loads of specificity to this rule and still had to use important.
// TODO - maybe revisit this
body[get-out-of-jail="false"]{
    .get-out-50-button,
    .roll-doubles-for-jail{
        display: none !important;
    }
}

body[get-out-of-jail="true"] .current-player-summary{
    .get-out-50-button,
    .roll-doubles-for-jail{
        display: initial !important;
    }

    .roll-dice-button{
        display: none;
    }
}

body[get-out-of-jail="true"][roll-doubles-for-jail="false"] .roll-doubles-for-jail{
    pointer-events: none;
    @include disabledButton()
}


/* Property overview  --------------------------------------------------------*/

.property-overview{
    max-width: 294px;
    float: none;
    margin: 0 auto;
}

.property-overview-title{
    margin-bottom: 20px;
}

.property-overview-color .property-overview-title{
    margin-bottom: 0;
}

.property-overview-title{
    font-weight: bold;
    text-transform: uppercase;
    font-family: Montserrat, sans-serif;
}

.title-deed{
    font-size: 0.7em;
}

.property-overview-color{
    padding: 20px;
    border: 2px solid $black;
    display: inline-block;
    min-width: 250px;
}

.property-overview .price{
    background: #000;
    color: #fff;
    padding: 5px;
}


//TODO - I tried implementing this as an each loop but couldn't get it to work.
.property-overview-color.brown{background: $brown;}
.property-overview-color.lightblue{background: $lightblue;}
.property-overview-color.pink{background: $pink;}
.property-overview-color.orange{background: $orange;}
.property-overview-color.red{background: $red;}
.property-overview-color.yellow{background: $yellow;}
.property-overview-color.green{background: $green;}
.property-overview-color.darkblue{background: $darkblue;}


$colours: brown, lightblue, pink, orange, red, yellow, green, darkblue;

@each $colour in $colours{
    //.property-overview-color.#{$colour}{
        //background: '$#{$colour}';
    //}
}

.property-overview-house-icon{
    background: url('images/house-icon.svg') center no-repeat;
    background-size: contain;
    padding: 0 9px;
    color: #fff;
    display: inline-block;
    text-align: center;
    min-width: 14px;
}


.property-overview table{
    float: none;
    margin: auto;

    tr td:last-child{
        text-align: right;
        width: 60px;
    }

    tr td:first-child{
        text-align: left;
        min-width: 200px;
    }

    tr:last-child .property-overview-house-icon{
        background-image: url('images/hotel-icon.svg');
    }
}

.back-button{
    width: 35px;
    height: 35px;
    background: url('images/back.svg') center no-repeat;
    background-size: contain;
    position: absolute;
    top: 20px;
    right: 68px;
}

.rent-table,
.house-price-table{
    width: 100%;
    max-width: 300px;
}

.rent-table tr:last-child .property-overview-house-icon{
    color: transparent;
}

/* Utility and station property overviews --------- */

.card-icon{
    height: 110px;
    background-position: center;
    background-size: contain;
    background-repeat: no-repeat;
    margin-bottom: 20px;

    &.card-icon-Electric-Company{
        background-image: url('images/electric-company.svg');
    }

    &.card-icon-Water-Works{
        background-image: url('images/water-works.svg');
    }

    &.card-icon-station{
        background-image: url('images/station.svg');
    }
}

/* Property overview  --------------------------------------------------------*/

.build-house-button{
    max-width: 170px;
}

body[build-hotel="false"] .house-visual-display[houses="4"] + .button-panel .build-house-button,    // Build house button on properties with 4 houses when build-hotels is false
body[build-house = "false"] .build-house-button,                                                    // Build house button When build-house is false
.house-visual-display[houses="0"] + .button-panel .sell-house-button,                               // Sell house button when property doesn't have houses
.disabled-button{                                                                                   // General disabled buttons
    @include disabledButton();
}

// Properties with hotels
.house-visual-display[houses="5"] + .button-panel{
    
    .build-house-button{
        @include disabledButton()
    }

    .sell-house-button .sell-house{
        display: none;
    }

    .build-house-button .maximum-number-of-buildings-reached{
        display: block;
    }

    /* If we have the maximum number of buildings, this is the definitive rule.
       we do not care whether there are still hotels in the bank */
    .build-house-button span:not(.maximum-number-of-buildings-reached){
        display: none !important;
    }
}

// Properties without hotels
.house-visual-display:not([houses="5"]) + .button-panel{

    .build-house-button .build-hotel,
    .sell-house-button .sell-hotel,
    .build-house-button .maximum-number-of-buildings-reached{
        display: none;
    }
}

// Properties with 4 houses
.house-visual-display[houses="4"] + .button-panel{
    .build-house-button .build-hotel{
        display: block;
    }

    .build-house-button .build-house{
        display: none;
    }
}


.no-more-houses-in-bank,
.no-more-hotels-in-bank{
    display: none;
}


// If there are no houses in the bank
body[build-house="false"]{
    .no-more-houses-in-bank{
        display: block;
    }

    .build-house-button span:not(.no-more-houses-in-bank){
        display: none !important;
    }
}

// If there are no hotels in the bank
body[build-hotel="false"]{
    .house-visual-display[houses="4"] + .button-panel .no-more-hotels-in-bank{
        display: block;
    }

    .house-visual-display[houses="4"] + .button-panel .build-house-button span:not(.no-more-hotels-in-bank){
        display: none;
    }
}



.house-visual-display{
    height: 35px;
    margin: 10px 0;
}

@for $i from 0 through 5 {

    .house-visual-display[houses="#{$i}"]{
        background: url('images/house-visual-display-#{$i}.svg') center no-repeat;
        background-size: contain;
    }
  }

.colour-set-overview{
    display: flex;
    justify-content: space-evenly;
    flex-wrap: wrap;
    

    .property-overview-color{
        min-width: 170px;
        font-size: 14px;
    }

    .property-overview table tr td:first-child,{
        min-width: 135px;
    }

    table{
        font-size: 80%;
    }
}

// When there are no houses left in the bank, disable build house (but not build hotel) buttons
body[build-house="false"] .house-visual-display:not([houses="4"]) + .build-house-button{
    @include disabledButton()
}

// When there are no hotels left in the bank, disable build hotel (but not build house) buttons
body[build-hotel="false"] .house-visual-display[houses="4"] + .build-house-button{
    @include disabledButton()
}

.house-visual-display[houses="5"] + .build-house-button{
    //display: none;
}

/* Left panel  ---------------------------------------------------------------*/

#left-panel{
    flex-basis: 275px;
    margin-right: 20px;
    align-self: stretch;
}

/* Bank  ---------------------------------------------------------------------*/

#bank{
    border: $border;
    background: #fff;
    margin-bottom: 10px;
}

#bank-content{
    min-height: 115px;
    display: flex;
    justify-content: space-between;
}

#bank-content > div{
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    justify-content: center;
}

#bank-title{
    background: #000 url('images/bank.svg') 10px center no-repeat;
    background-size: 20px;
    padding: 5px;
    color: #fff;
}

.bank-house-icon,
.bank-hotel-icon{
    width: 20px;
    height: 20px;
    background: url('images/house-icon.svg') center no-repeat;
    background-size: contain;
    margin: 1px;
}

.bank-hotel-icon{
    background-image: url('images/hotel-icon.svg');
}


/* Feed  ---------------------------------------------------------------------*/

#feed{
    background: #fff;
    color: #000;
    position: relative;
    border: $border;
    box-sizing: border-box;
    
    //min-height: calc(100% - 175px);
}

#feed-title{
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    padding: 5px;
    background: #000;
    color: #fff;
}

#feed-content{
    max-height: calc(100% - 38px);
    overflow-y: auto;
    box-sizing: border-box;
}

#feed-content > div{
    padding: 10px 10px 10px 60px;
    font-size: 0.8em;
    background-position: 18px center, 10px center;
    background-size: 28px, 42px;
    background-repeat: no-repeat;
    text-align: left;
    min-height: 42px;
    position: relative;
    display: flex;
    align-items: center;
}

#feed-content > div:first-child{
    animation: slideInFromLeft 0.3s linear;
    animation-iteration-count: 1;
}



/* Auction panel  ------------------------------------------------------------*/

.auction-screen{
    display: flex;
    align-items: flex-start;
    justify-content: space-around;
}

.auction-bidding-area{
    max-width: 400px;
}

.auction-heading{
    background: #000 url('images/auction-white.svg') 10px center no-repeat;
    background-size: 40px;
    color: #fff;
    text-transform: uppercase;
    padding: 10px;
    margin: 0;
}

.player-bid-interface{
    transition: 0.3s;
    display: grid;
    grid-template-columns: 50px 50px 75px 100px;
    grid-template-rows: auto auto;
    grid-row-gap: 10px;
    grid-column-gap: 5px;
    background: #f0f0f0;
    padding: 10px;
    margin-top: 10px;

    &.abstained-from-bidding{
        opacity: 0.15;
        pointer-events: none;
    }

    h3{
        grid-column: 2 / 4;
        grid-row: 1 / 1;
        margin: 10px 0 10px 10px;
        text-align: left;
        text-transform: uppercase;
        font-size: 22px;
        overflow: hidden;
    }

    input{
        grid-column: 1 / 3;
        grid-row: 2 / 2;
        font-weight: bold;
        font-family: 'Kabel-Heavy', sans-serif;
        font-size: 20px;
    }

    button{
        grid-column: 3 / 3;
        grid-row: 2 / 2;
    }

    button.abstain-button{
        grid-column: 4 / 4;
    }

    .player-token-icon{
        border-radius: 50%;
        background-size: 36px;
        background-position: center;
        background-repeat: no-repeat;
        border: $border;
        height: 44px
    }

    .player-money{
        padding: 9px 0;
        text-align: right;
        grid-column: 4 / 4;
        grid-row: 1 / 1;
    }
}

.player-bid-interface.current-winner button{
    @include disabledButton()
}

.current-bid-container{
    background: $lightgreen;
    padding: 10px;
    border: $border;
}

.current-bid-heading{
    font-size: 1em;
    margin: 0;
}

.current-bid-amount{
    font-size: 30px;
}

.auction-screen input:invalid{
    background: $red;
    color: #fff;
}

.auction-screen input:invalid + button{
    @include disabledButton();
}

.player-bid-interface.current-winner{
    background: $green;
    color: #fff;
}

/* Feed icons ----------------------------------------------------------------*/

.money-plus         {background-image: url('images/feed-icons/money-plus.svg'), url('images/feed-icons/feed-circle.svg');}
.money-minus        {background-image: url('images/feed-icons/money-minus.svg'), url('images/feed-icons/feed-circle.svg');}
.get-out-card       {background-image: url('images/feed-icons/get-out-card.svg'), url('images/feed-icons/feed-circle.svg');}
.go-to-jail         {background-image: url('images/feed-icons/go-to-jail.svg'), url('images/feed-icons/feed-circle.svg');}
.advance            {background-image: url('images/feed-icons/advance.svg'), url('images/feed-icons/feed-circle.svg');}
.failed-jail-roll   {background-image: url('images/feed-icons/failed-jail-roll.svg'), url('images/feed-icons/feed-circle.svg');}
.doubles            {background-image: url('images/feed-icons/doubles.svg'), url('images/feed-icons/feed-circle.svg');}
.doubles-2nd        {background-image: url('images/feed-icons/doubles-2nd.svg'), url('images/feed-icons/feed-circle.svg');}
.out-of-jail        {background-image: url('images/feed-icons/out-of-jail.svg'), url('images/feed-icons/feed-circle.svg');}
.rent               {background-image: url('images/feed-icons/rent.svg'), url('images/feed-icons/feed-circle.svg');}
.doubles-out-of-jail{background-image: url('images/feed-icons/doubles-out-of-jail.svg'), url('images/feed-icons/feed-circle.svg');}
.buy-property       {background-image: url('images/feed-icons/buy-property.svg'), url('images/feed-icons/feed-circle.svg');}
.auction            {background-image: url('images/feed-icons/auction.svg'), url('images/feed-icons/feed-circle.svg');}

/* Testing panel -------------------------------------------------------------*/

#testing-panel,
#testing-toggle-panel{
    background: $black;
    color: #fff;
    padding: 10px;
}

#testing-panel{
    position: fixed;
    top: 0;
    right: 0;
    left: 0;
    z-index: 999;
}

body:not(.testing-panel-enabled) #testing-panel{
    display: none;
}

#testing-toggle-panel{
    position: fixed;
    right: 0;
    top: 0;
    z-index: 1000;
    justify-content: space-around;
    display: flex;
}



/* CONFETTI ----------------------------------------------------------------- */

.confetti-container{
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: 101;
    pointer-events: none;
    transition: 1s;
  }
  
  .confetti-container .particle{
    animation-name: particleAnimation;  
    animation-timing-function: linear;
    animation-fill-mode: both;
    animation-iteration-count: infinite;
    position: absolute;
  }
  
  .particle > div{
    background: #3e64ad;
    width: 100%;
    height: 100%;
  }
  
  .confetti-container .particle > div:after{
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    background: linear-gradient(transparent, rgba(255,255,255, 0.2), transparent);
  }
  
  @keyframes particleAnimation{
    0%{
      top: -50px;
    }
  
    100%{
      top: 2500px;
    }
  }
  
  .particle > div{
    
    animation-name: particleRotation;
    animation-iteration-count: infinite;
    animation-timing-function: linear;
    animation-duration: 5s;
  }
  
  @keyframes particleRotation{
    from{
      transform: rotate3d(1, 1, 1, 0deg);
    }
    
    to{
      transform: rotate3d(1, 1, 1, 360deg);
    }
  }
  
  .confetti-container .particle:nth-child(8n - 7) > div{background: #824c26;}
  .confetti-container .particle:nth-child(8n - 6) > div{background: #99d1f4;}
  .confetti-container .particle:nth-child(8n - 5) > div{background: #d52788;}
  .confetti-container .particle:nth-child(8n - 4) > div{background: #f1970b;}
  .confetti-container .particle:nth-child(8n - 3) > div{background: #db0926;}
  .confetti-container .particle:nth-child(8n - 2) > div{background: #e9ed38;}
  .confetti-container .particle:nth-child(8n - 1) > div{background: #0aa959;}
  .confetti-container .particle:nth-child(8n)     > div{background: #f1970b;}
  
  /* Stars */
  .confetti-container .particle:nth-child(3n){
    clip-path: polygon(50% 0%, 61% 35%, 98% 35%, 68% 57%, 79% 91%, 50% 70%, 21% 91%, 32% 57%, 2% 35%, 39% 35%);
  }
  
  /* Pentagons */
  .confetti-container .particle:nth-child(7n){clip-path: polygon(50% 0%, 100% 38%, 82% 100%, 18% 100%, 0% 38%);}
  
  /* Circles */
  .confetti-container .particle:nth-child(6n){clip-path: circle(50% at 50% 50%);}
  
  /* Rhombus */
  .confetti-container .particle:nth-child(9n){clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);}
  
  
  
  .confetti-container .particle:nth-child(5n - 4){
    animation-duration: 40s;
  }
  
  .confetti-container .particle:nth-child(5n - 3){
    animation-duration: 35s;
  }
  
  .confetti-container .particle:nth-child(5n - 2){
    animation-duration: 30s;
  }
  
  .confetti-container .particle:nth-child(5n - 1){
    animation-duration: 25s;
  }
  
  .confetti-container .particle:nth-child(5n - 4){
    animation-duration: 20s;
  }
  

/* General purpose animations ------------------------------------------------*/


@keyframes fadeIn{
    from{opacity: 0;}
    to{opacity: 1;}
}

@keyframes fadeOut{
    from{opacity: 1;}
    to  {opacity: 0;}
}

@keyframes zoomIn{
    from{transform: scale(0);}
    to{transform: scale(1);}
}

@keyframes goodChangeAnimation{
    0%   {transform: scale(1);}
    50%  {transform: scale(1.75); color: $green;}
    100% {transform: scale(1);}
}

@keyframes badChangeAnimation{
    0%   {transform: scale(1);}
    50%  {transform: scale(1.75); color: $red;}
    100% {transform: scale(1);}
}

@keyframes spinAnimation{
    0%   {transform: rotate(0deg);}
    100%  {transform: rotate(360deg);}
}

@keyframes slideDown{
    from{transform: translateY(-100%);}
    to  {transform: translateY(0);}
}

@keyframes slideUp{
    from{transform: translateY(100%);}
    to  {transform: translateY(0);}
}

@keyframes slideInFromLeft{
    from{transform: translateX(-100%);}
    to{transform: translateX(0);}
}