/* Monopoly SCSS */
/* Created by Ceri Woolway beginning October 2020 */

// General colours
$lightgreen  : #d5e8d4;
$black       : #000;


// Property colours

$brown      : #824c26;
$lightblue  : #99d1f4;
$pink       : #d52788;
$orange     : #f1970b;
$red        : #db0926;
$yellow     : #e9ed38;
$green      : #0aa959;
$darkblue   : #3e64ad;


$border: 3px solid $black;

/* @font-face kit by Fonts2u (https://fonts2u.com) */
@font-face {font-family:"Kabel-Heavy";src:url("fonts/Kabel-Heavy.eot?") format("eot"),url("fonts/Kabel-Heavy.woff") format("woff"),url("fonts/Kabel-Heavy.ttf") format("truetype"),url("fonts/Kabel-Heavy.svg#Kabel-Heavy") format("svg");font-weight:normal;font-style:normal;}

body{
    font-family: 'Kabel-Heavy', sans-serif;
    font-size: 24px;
    min-height: 100vh;
    padding: 30px;
    margin: 0;
    display: flex;
    //flex-direction: column;
    align-items: center;
    justify-content: space-between;
    box-sizing: border-box;
    background: $lightgreen;
    text-align: center;
}


$columnsize: 80px;

#board{
    border: $border;
    display: grid;
    grid-template-columns: $columnsize auto $columnsize;
    grid-template-rows: $columnsize auto $columnsize;
    max-width: 900px;
    position: relative;
}

#south{
    grid-column: 2 / 4;
    grid-row: 3 / 4;

    display: flex;
    flex-direction: row-reverse;

    //display: grid;
    //grid-template-columns: auto auto auto auto auto auto auto auto auto auto $columnsize;

    & > div{
        //grid-row: 1 / 1;
        // I'm sure this shouldn't be necessary, but I can't figure out how to get rid of the excess rows right now.

        border-left: $border;
        border-top: $border;
    }

    & > div:last-child{
        border-left: none;
    }

}

@for $i from 1 through 10 {
    #south > div:nth-child(#{$i}){
        grid-column-start: (13 - $i);
        grid-column-end: (12 - $i);
    }
  }

#west{
    grid-column: 1 / 2;
    grid-row: 2 / 4;
    flex-direction: column-reverse;

    & > div{
        border-right: $border;
        border-top: $border;
    }

    & > div:last-child{
        border-top: none;
    }
}

#north{
    grid-column: 1 / 3;
    grid-row: 1 / 2;

    & > div{
        border-right: $border;
        border-bottom: $border;
    }

    & > div:last-child{
        border-right: none
    }
}

#east{
    grid-column: 3 / 4;
    grid-row: 1 / 3;
    flex-direction: column;

    & > div{
        border-left: $border;
        border-bottom: $border;
    }

    & > div:last-child{
        border-bottom: none;
    }
}

.corner.special{
    flex-basis: $columnsize;
    flex-grow: unset;
    flex-shrink: unset;
}

.row{
    display: flex;
    overflow: hidden;
}

.row > div{
    flex-grow: 1;
    flex-shrink: 1;
    box-sizing: border-box;
    flex-basis: 7%;
    //font-size: 1vw;
}

.property,
.community-chest,
.special,
.station,
.chance,
.utility{
    //border-top: $border;
    //border-left: $border;
    padding: 5px;
    text-align: center;
    font-size: 10px;
    min-height: 50px;
}




/* Normal property -----------------------------------------------------------*/

.property{
    position: relative;
    padding-top: 20px;
    text-align: center;

    &:before{
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 10px;
        border-bottom: $border;
    }
}

.property.brown:before{background: $brown;}
.property.lightblue:before{background: $lightblue;}
.property.pink:before{background: $pink;}
.property.orange:before{background: $orange;}
.property.red:before{background: $red;}
.property.yellow:before{background: $yellow;}
.property.green:before{background: $green;}
.property.darkblue:before{background: $darkblue;}

.property-price{
    font-size: 14px;
}

/* Special property ----------------------------------------------------------*/

.community-chest{
    background: url('images/community-chest.svg') center no-repeat;
    background-size: contain;
}

.station{
    background: url('images/station.svg') center no-repeat;
    background-size: contain;
}

.chance{
    background: url('images/chance.svg') center no-repeat;
    background-size: contain;
}


/* Dice ----------------------------------------------------------------------*/

.dice{
    width: 35px;
    height: 35px;
    background: #fff;
    border: $border;
    border-radius: 5px;
    background-size: contain;
}

@for $i from 1 through 6 {
    .dice-roll-#{$i}{
        background-image: url('images/dice-#{$i}.svg')
    }
  }

#doubles{
    font-size: 0.8em;
}

#dice-roll{
    display: flex;
    align-items: center;

    span{
        padding: 10px;
    }

    #dice-total{
        font-weight: bold;
        font-size: 1.2em;
    }
}

.double1 .dice{
    background-color: $yellow;
}

.double2 .dice{
    background-color: $orange;
}

.double3 .dice{
    background-color: $red;
}

/* Player tokens -------------------------------------------------------------*/

// Eventually there'll be mutliple token types, with each player being able to
// choose their token. This will do for now.
.token{
    //background: url('images/token.svg') center no-repeat;
    //background-size: 35px;
}

.token{
    width: 80px;
    height: 80px;
    position: absolute;
    z-index: 2;
    background-size: 20px;
    background-repeat: no-repeat;
    background-position: center;
}

@for $i from 1 through 4 {
    #player#{$i}token{
        background-image: url('images/token-#{$i}.svg');
    }
}

#player1token{
    background-position: left bottom;
}

#player2token{
    background-position: 33% bottom;
}

#player3token{
    background-position: 66% bottom;
}

#player4token{
    background-position: right bottom;
}



/* Due to the way the JS calculates the correct position for the token and the 
   side the borders end up on, there are slightly irregularities. Likely
   not even noticeable but it bothers me otherwise */
.token[area="south"],
.token[area="east"]{
    margin-left: 1px;
}

.token[area="west"]{
    margin-left: -1px;
}


/* Popup ---------------------------------------------------------------------*/

#popup{
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 20px;
    background: rgba($black, 0.7);
}

#popup-inner{
    background: #fff;
    border: $border;
    padding: 20px;
    width: 800px;
    max-width: 100%;
    position: relative;
    text-align: center;
    box-shadow: 0 0 20px rgba(black, 0.4);
}

#popup-close{
    width: 35px;
    float: right;
}

body:not(.popup-open) #popup{
    display: none;
}


/* Jail  ---------------------------------------------------------------------*/

$jailAnimationLength: 1.5;

#jail-overlay{

    pointer-events: none;
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: 100;


    &:before{
        background: rgba(blue, 0.4);
        animation-delay: ($jailAnimationLength / 3) + s;
    }

    &:after{
        background: rgba(red, 0.4);
    }

    &:before,
    &:after{
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        bottom: 0;
        right: 0;
        animation-name: jailAnimation;
        animation-duration: ($jailAnimationLength) + s;
        animation-iteration-count: infinite;
    }
}

.bars{
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: 3;
}

.bars:first-child{
    background: url('images/jail-bars-1.png');
    animation: bars-1 0.6s both;
}

.bars:last-child{
    background: url('images/jail-bars-2.png');
    animation: bars-2 0.6s both;
}

.jailAnimation #jail-overlay{
    display: block;
    animation: jailFadeOut 0.7s;
    animation-delay: 2.3s;
}

.jailAnimation #token{
    animation: jailTokenAnimation 1s;
}

@keyframes bars-1{
    from{transform: translateY(-100%);}
    to  {transform: translateY(0);}
}

@keyframes bars-2{
    from{transform: translateY(100%);}
    to  {transform: translateY(0);}
}

@keyframes jailAnimation{
    0%  {opacity: 0;}
    50% {opacity: 1;}
    100%{opacity: 0;}
}

@keyframes jailTokenAnimation{
    from {transform: scale(3);}
    to   {transform: scale(1);}
}

@keyframes jailFadeOut{
    from{opacity: 1;}
    to  {opacity: 0;}
}

/* New players  --------------------------------------------------------------*/

#new-player-overlay{
    background: $lightgreen;
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: 100;
}

/* Player summary  -----------------------------------------------------------*/

#player-summary{
    display: flex;
    flex-direction: column;
    justify-content: space-around;
    box-sizing: border-box;

    h2{
        margin: 0;
    }

    & > div{
        padding: 40px 20px;
    }
}

.player-action-button{
    display: none;
}


//TODO - make this a loop
body[turn="player1"] #player1summary .player-action-button{
    display: initial;
}

body[turn="player2"] #player2summary .player-action-button{
    display: initial;
}

body[turn="player3"] #player3summary .player-action-button{
    display: initial;
}

body[turn="player4"] #player4summary .player-action-button{
    display: initial;
}