/* Monopoly SCSS */
/* Created by Ceri Woolway beginning October 2020 */

// General colours
$lightgreen  : #d5e8d4;
$black       : #000;


// Property colours

$brown      : #824c26;
$lightblue  : #99d1f4;
$pink       : #d52788;
$orange     : #f1970b;
$red        : #db0926;
$yellow     : #e9ed38;
$green      : #0aa959;
$darkblue   : #3e64ad;


$border: 3px solid $black;

// TODO - do something more stylised with this.
@mixin disabledButton{
    background: #ccc;
    color: rgb(143, 143, 143);
    pointer-events: none;
}

/* @font-face kit by Fonts2u (https://fonts2u.com) */
@font-face {font-family:"Kabel-Heavy";src:url("fonts/Kabel-Heavy.eot?") format("eot"),url("fonts/Kabel-Heavy.woff") format("woff"),url("fonts/Kabel-Heavy.ttf") format("truetype"),url("fonts/Kabel-Heavy.svg#Kabel-Heavy") format("svg");font-weight:normal;font-style:normal;}

body{
    font-family: 'Kabel-Heavy', sans-serif;
    font-size: 24px;
    min-height: 100vh;
    padding: 0;
    margin: 0;
    background: $lightgreen;
}

main{
    padding: 15px;
    margin: 0;
    display: flex;
    //flex-direction: column;
    align-items: center;
    justify-content: space-between; 
    text-align: center;
}

button{
    padding: 10px;
    background: #000;
    color: #fff;
    text-transform: uppercase;
    border: none;
    font-weight: bold;
    font-family: 'Kabel-Heavy', sans-serif;
    font-size: 0.6em;
    cursor: pointer;
}


/* width */
::-webkit-scrollbar {
    width: 10px;
  }
  
  /* Track */
  ::-webkit-scrollbar-track {
    background: #f1f1f1;
  }
  
  /* Handle */
  ::-webkit-scrollbar-thumb {
    background: $lightgreen;
  }
  
  /* Handle on hover */
  ::-webkit-scrollbar-thumb:hover {
    background: darken($lightgreen, 10%);
  }

/* PLAYER CREATOR ------------------------------------------------------------ */

#new-player-overlay{
    background: $lightgreen url('images/city.svg') center bottom no-repeat;
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: 100;
    text-align: center;
    display: flex;
    align-items: center;
    padding: 30px;
    flex-direction: column;

    h1{
        background: $red;
        color: #fff;
        padding: 10px 20px;
        border: 10px solid #fff;
        text-shadow: 3px 3px 0 black;
        width: 650px;
        box-shadow: 0 0 10px rgba(black, 0.5), inset 0 -10px 20px rgba(0, 0, 0, 0.3);
        max-width: 100%;
    }
}

#begin-game{
    background: $red;
    margin-top: 20px;
    border: 2px solid #fff;
    box-shadow: 0 0 10px rgba(black, 0.5);
    font-size: 0.8em;
    transition: 0.2s;

    &:hover{
        background: darken($red, 5%);
    }
}


#player-creator{
    display: flex;
    align-items: center;
    justify-content: center;
    flex-wrap: wrap;
    background: rgba($lightgreen, 0.9);
    border-radius: 10px;

    & > div{
        animation: zoomIn 0.5s both;
    }

    & > div:nth-child(2){
        animation-delay: 0.2s;
    }

    & > div:last-child.add-player-button{
        animation-delay: 0.4s;
    }
}

@keyframes zoomIn{
    from{transform: scale(0);}
    to{transform: scale(1);}
}

.player-creation-panel{
    padding: 20px;
    background: #fff;
    border-radius: 10px;
    margin: 10px;
    min-width: 200px;
    animation: zoomIn 0.5s both;

    h2{
        font-size: 1em;
        margin-bottom: 10px;
    }

    input{
        text-align: center;
        border: none;
        border-bottom: 1px solid #000;
        padding: 10px 0;
    }

    ::placeholder{
        font-style: italic;
    }
}

.add-player-button{
    background: darken($lightgreen, 10%);
    border-radius: 10px;
    align-self: stretch;
    min-width: 150px;
    padding: 20px;
    margin: 10px;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    color: #60875E;
    animation: zoomIn 0.5s both;

    img{
        margin-top: 15px;
        width: 35px;
    }
}


/* TOKEN SELECTOR ----------------------------------------------------------- */

.availableTokenChoices{
    display: flex;
    justify-content: center;
    flex-wrap: wrap;
    max-width: 200px;
}

.token-option,
.token-selector-chosen-indicator{
    width: 70px;
    height: 70px;
}

$tokens: 'dog', 'iron', 'thimble', 'car';

@each $token in $tokens{
    .token-option-#{$token},
    .token-selector-chosen-indicator[chosentoken="#{$token}"]{
        background: url('images/tokens/#{$token}.svg') center no-repeat;
        background-size: contain;
    }
}



/* BOARD --------------------------------------------------------------------- */


$columnsize: 80px;

#board{
    border: $border;
    display: grid;
    grid-template-columns: $columnsize auto $columnsize;
    grid-template-rows: $columnsize auto $columnsize;
    max-width: 900px;
    position: relative;
}

#south{
    grid-column: 2 / 4;
    grid-row: 3 / 4;

    display: flex;
    flex-direction: row-reverse;

    //display: grid;
    //grid-template-columns: auto auto auto auto auto auto auto auto auto auto $columnsize;

    & > div{
        //grid-row: 1 / 1;
        // I'm sure this shouldn't be necessary, but I can't figure out how to get rid of the excess rows right now.

        border-left: $border;
        border-top: $border;
    }

    & > div:last-child{
        border-left: none;
    }

}

@for $i from 1 through 10 {
    #south > div:nth-child(#{$i}){
        grid-column-start: (13 - $i);
        grid-column-end: (12 - $i);
    }
  }

#west{
    grid-column: 1 / 2;
    grid-row: 2 / 4;
    flex-direction: column-reverse;

    & > div{
        border-right: $border;
        border-top: $border;
    }

    & > div:last-child{
        border-top: none;
    }
}

#north{
    grid-column: 1 / 3;
    grid-row: 1 / 2;

    & > div{
        border-right: $border;
        border-bottom: $border;
    }

    & > div:last-child{
        border-right: none
    }
}

#east{
    grid-column: 3 / 4;
    grid-row: 1 / 3;
    flex-direction: column;

    & > div{
        border-left: $border;
        border-bottom: $border;
    }

    & > div:last-child{
        border-bottom: none;
    }
}

.corner.special{
    flex-basis: $columnsize;
    flex-grow: unset;
    flex-shrink: unset;
}

.row{
    display: flex;
    overflow: hidden;
}

.row > div{
    flex-grow: 1;
    flex-shrink: 1;
    box-sizing: border-box;
    flex-basis: 7%;
    //font-size: 1vw;
}

#board .row > .property,
#board .row > .community-chest,
#board .row > .special,
#board .row > .station,
#board .row > .chance,
#board .row > .utility{
    //border-top: $border;
    //border-left: $border;
    padding: 5px;
    text-align: center;
    font-size: 10px;
    min-height: 50px;
}




/* Normal property -----------------------------------------------------------*/

.property{
    position: relative;
    padding-top: 20px !important;
    text-align: center;

    &:before{
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 10px;
        border-bottom: $border;
    }
}

.property.brown:before{background: $brown;}
.property.lightblue:before{background: $lightblue;}
.property.pink:before{background: $pink;}
.property.orange:before{background: $orange;}
.property.red:before{background: $red;}
.property.yellow:before{background: $yellow;}
.property.green:before{background: $green;}
.property.darkblue:before{background: $darkblue;}

.property-price{
    font-size: 14px;
}

/* Special property ----------------------------------------------------------*/

.community-chest{
    background: url('images/community-chest.svg') center no-repeat;
    background-size: contain;
}

.station{
    background: url('images/station.svg') center calc(100% - 2px) no-repeat;
    background-size: 40px;
}

.chance{
    background: url('images/chance.svg') center calc(100% - 6px) no-repeat;
    background-size: 50px;
}

/* Currency symbol -----------------------------------------------------------*/

.currencySymbol{
    display: inline-block;
    font-size: 80%;
    transform: rotate(180deg) translateY(5%);
    margin-top: -10%;
}

/* Dice ----------------------------------------------------------------------*/

.dice{
    width: 35px;
    height: 35px;
    background: #fff;
    border: $border;
    border-radius: 5px;
    background-size: contain;
}

@for $i from 1 through 6 {
    .dice-roll-#{$i}{
        background-image: url('images/dice-#{$i}.svg')
    }
  }

#doubles{
    font-size: 0.8em;
}

#dice-roll{
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 20px;

    span{
        padding: 10px;
    }

    #dice-total{
        font-weight: bold;
        font-size: 1.2em;
    }
}

.double1 .dice{
    background-color: $yellow;
}

.double2 .dice{
    background-color: $orange;
}

.double3 .dice,
.failed-jail-roll .dice{
    background-color: $red;
}

.successful-jail-roll .dice{
    background-color: $green;
}

/* Player tokens -------------------------------------------------------------*/

// Eventually there'll be mutliple token types, with each player being able to
// choose their token. This will do for now.
.token{
    //background: url('images/token.svg') center no-repeat;
    //background-size: 35px;
}

.token{
    width: 46px;
    height: 28px;
    position: absolute;
    z-index: 2;
    background-size: 35px;
    background-repeat: no-repeat;
    background-position: center bottom;

    &:before{
        content: '';
        width: 100%;
        height: 28px;
        position: absolute;
        top: 0;
        bottom: 0;
        left: calc(50% - 23px);
        mix-blend-mode: multiply;
        border-radius: 25px;
        border: 2px solid #000;
    }
}


@each $token in $tokens{
    .token.#{$token}{
        background-image: url('images/tokens/#{$token}.svg');
    }
}

#player1token:before{background: yellow;}
#player2token:before{background: cyan;}
#player3token:before{background: yellowgreen;}
#player4token:before{background: orange;}


/*
#player1token{
    background-position: left bottom;
}

#player2token{
    background-position: 33% bottom;
}

#player3token{
    background-position: 66% bottom;
}

#player4token{
    background-position: right bottom;
}
*/

/* Due to the way the JS calculates the correct position for the token and the 
   side the borders end up on, there are slightly irregularities. Likely
   not even noticeable but it bothers me otherwise */
.token[area="south"]{
    margin-left: 1px;
}

.token[area="north"]{
    margin-left: -3px;
}

.token[area="west"]{
    margin-left: -3px;
}


/* Popup ---------------------------------------------------------------------*/

#popup{
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 20px;
    background: rgba($black, 0.7);
    z-index: 100;
}

#popup-inner{
    background: #fff;
    border: $border;
    padding: 20px;
    width: 800px;
    max-width: 100%;
    position: relative;
    text-align: center;
    box-shadow: 0 0 20px rgba(black, 0.4);

}

#popup-close{
    width: 35px;
    position: absolute;
    top: 20px;
    right: 20px;
    z-index: 2;
}

body:not(.popup-open) #popup{
    display: none;
}

#popup-message{
    min-height: 100px;
}

/* Jail  ---------------------------------------------------------------------*/

$jailAnimationLength: 1.5;

#jail-overlay{

    pointer-events: none;
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: 99;


    &:before{
        background: rgba(blue, 0.4);
        animation-delay: ($jailAnimationLength / 3) + s;
    }

    &:after{
        background: rgba(red, 0.4);
    }

    &:before,
    &:after{
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        bottom: 0;
        right: 0;
        animation-name: jailAnimation;
        animation-duration: ($jailAnimationLength) + s;
        animation-iteration-count: infinite;
    }
}

.bars{
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: 3;
}

.bars:first-child{
    background: url('images/jail-bars-1.png');
    animation: bars-1 0.6s both;
}

.bars:last-child{
    background: url('images/jail-bars-2.png');
    animation: bars-2 0.6s both;
}

.jailAnimation #jail-overlay{
    display: block;
    animation: jailFadeOut 0.7s;
    animation-delay: 2.3s;
}

.jailAnimation #token{
    animation: jailTokenAnimation 1s;
}

@keyframes bars-1{
    from{transform: translateY(-100%);}
    to  {transform: translateY(0);}
}

@keyframes bars-2{
    from{transform: translateY(100%);}
    to  {transform: translateY(0);}
}

@keyframes jailAnimation{
    0%  {opacity: 0;}
    50% {opacity: 1;}
    100%{opacity: 0;}
}

@keyframes jailTokenAnimation{
    from {transform: scale(3);}
    to   {transform: scale(1);}
}

@keyframes jailFadeOut{
    from{opacity: 1;}
    to  {opacity: 0;}
}



/* Player summary  -----------------------------------------------------------*/

#player-summary{
    display: flex;
    flex-direction: column;
    justify-content: space-around;
    box-sizing: border-box;
    flex-basis: 250px;

    h2{
        margin: 0;
    }

    & > div{
        padding: 10px 20px;
    }
}

.good-change{
    animation: goodChangeAnimation 1s ease-in-out;
}

@keyframes goodChangeAnimation{
    0%   {transform: scale(1);}
    50%  {transform: scale(1.75); color: $green;}
    100% {transform: scale(1);}
}

.bad-change{
    animation: badChangeAnimation 1s ease-in-out;
}

@keyframes badChangeAnimation{
    0%   {transform: scale(1);}
    50%  {transform: scale(1.75); color: $red;}
    100% {transform: scale(1);}
}

.property-portfolio-title{
    background: $black;
    color: white;
    text-transform: uppercase;
    font-size: 0.6em;
    display: block;
    padding: 5px;
}

.property-portfolio{
    border: $border;
    padding: 10px;
}

.property-icon{
    width: 15px !important;
    height: 15px !important;
    border-radius: 50%;
    border: 2px solid $black;
    display: inline-block;
    margin: 2px;;
}

.property-icon.brown{background: $brown;}
.property-icon.lightblue{background: $lightblue;}
.property-icon.pink{background: $pink;}
.property-icon.orange{background: $orange;}
.property-icon.red{background: $red;}
.property-icon.yellow{background: $yellow;}
.property-icon.green{background: $green;}
.property-icon.darkblue{background: $darkblue;}

.property-icon.train-station,
.property-icon.utility{
    border: none;
    border-radius: 0;
    background-size: contain !important;
}

.property-icon.train-station{background: url('images/station.svg') center no-repeat;}
.property-icon.electric-company{background: url('images/electric-company.svg') center no-repeat;}
.property-icon.water-works{background: url('images/water-works.svg') center no-repeat;}

/* Full portfolio view  ------------------------------------------------------*/

.full-portfolio{
    display: flex;
    flex-wrap: wrap;
    position: relative;

    &:before{
        content: 'PLAYER PORTFOLIO';
        color: #fff;
        background: #000;
        position: absolute;
        bottom: calc(100% + 20px);
        left: -23px;
        right: -23px;
        padding: 10px;
    }
}

.full-portfolio-item{
    display: flex;
    align-items: center;
    width: 380px;

    & > div{
        margin: 0 10px 10px 0;
    }
}

/* Player action buttons  ----------------------------------------------------*/

.player-action-button{
    display: none;
}

.current-player-summary .player-action-button{
    display: initial;
}


body[dice-roll-available="false"] .roll-dice-button,
body[end-turn-available="false"] .end-turn-button{
    pointer-events: none;
    @include disabledButton()
}

// I added loads of specificity to this rule and still had to use important.
// TODO - maybe revisit this
body[get-out-of-jail="false"]{
    .get-out-50-button,
    .roll-doubles-for-jail{
        display: none !important;
    }
}

body[get-out-of-jail="true"] .current-player-summary{
    .get-out-50-button,
    .roll-doubles-for-jail{
        display: initial !important;
    }

    .roll-dice-button{
        display: none;
    }
}

body[get-out-of-jail="true"][roll-doubles-for-jail="false"] .roll-doubles-for-jail{
    pointer-events: none;
    @include disabledButton()
}


/* Property overview  --------------------------------------------------------*/

.property-overview-title{
    font-weight: bold;
    text-transform: uppercase;
    font-family: Montserrat, sans-serif;
}

.title-deed{
    font-size: 0.7em;
}

.property-overview-color{
    padding: 20px;
    border: 2px solid $black;
    display: inline-block;
    min-width: 220px;
    margin-bottom: 10px;
}


//TODO - I tried implementing this as an each loop but couldn't get it to work.
.property-overview-color.brown{background: $brown;}
.property-overview-color.lightblue{background: $lightblue;}
.property-overview-color.pink{background: $pink;}
.property-overview-color.orange{background: $orange;}
.property-overview-color.red{background: $red;}
.property-overview-color.yellow{background: $yellow;}
.property-overview-color.green{background: $green;}
.property-overview-color.darkblue{background: $darkblue;}


$colours: brown, lightblue, pink, orange, red, yellow, green, darkblue;

@each $colour in $colours{
    //.property-overview-color.#{$colour}{
        //background: '$#{$colour}';
    //}
}

.property-overview-house-icon{
    background: url('images/house-icon.svg') center no-repeat;
    background-size: contain;
    padding: 0 9px;
    color: #fff;
    display: inline-block;
    text-align: center;
    min-width: 14px;
}


.property-overview table{
    float: none;
    margin: auto;

    tr td:last-child{
        text-align: right;
        width: 60px;
    }

    tr td:first-child{
        text-align: left;
        min-width: 200px;
    }

    tr:last-child .property-overview-house-icon{
        background-image: url('images/hotel-icon.svg');
    }
}

.back-button{
    width: 35px;
    height: 35px;
    background: url('images/back.svg') center no-repeat;
    background-size: contain;
    position: absolute;
    top: 20px;
    right: 68px;
}

/* Building houses on property menu  -----------------------------------------*/

.build-house-button.disabled-button,
body[build-house = "false"] .build-house-button{
    @include disabledButton();
}

.house-visual-display{
    height: 35px;
}

@for $i from 0 through 5 {

    .house-visual-display[houses="#{$i}"]{
        background: url('images/house-visual-display-#{$i}.svg') center no-repeat;
        background-size: contain;
    }
  }

/* Left panel  ---------------------------------------------------------------*/

#left-panel{
    flex-basis: 275px;
    margin-right: 20px;
    align-self: stretch;
}

/* Bank  ---------------------------------------------------------------------*/

#bank{
    border: $border;
    background: #fff;
    margin-bottom: 10px;
}

#bank-content{
    min-height: 115px;
    display: flex;
    justify-content: space-between;
}

#bank-content > div{
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    justify-content: center;
}

#bank-title{
    background: #000 url('images/bank.svg') 10px center no-repeat;
    background-size: 20px;
    padding: 5px;
    color: #fff;
}

.bank-house-icon,
.bank-hotel-icon{
    width: 20px;
    height: 20px;
    background: url('images/house-icon.svg') center no-repeat;
    background-size: contain;
    margin: 1px;
}

.bank-hotel-icon{
    background-image: url('images/hotel-icon.svg');
}


/* Feed  ---------------------------------------------------------------------*/

#feed{
    background: #fff;
    color: #000;
    position: relative;
    border: $border;
    min-height: calc(100% - 175px);
}

#feed-title{
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    padding: 5px;
    background: #000;
    color: #fff;
}

#feed-content{
    max-height: calc(100% - 38px);
    overflow-y: auto;
}

#feed-content > div{
    padding: 10px 10px 10px 60px;
    font-size: 0.8em;
    background-position: 18px center, 10px center;
    background-size: 28px, 42px;
    background-repeat: no-repeat;
    text-align: left;
    min-height: 42px;
    position: relative;
    display: flex;
    align-items: center;
}

#feed-content > div:first-child{
    animation: feedSlideIn 0.3s linear;
    animation-iteration-count: 1;
}

@keyframes feedSlideIn{
    from{
        transform: translateX(-100%);
    }

    to{
        transform: translateX(0);
    }
}




/* Feed icons ----------------------------------------------------------------*/

.money-plus         {background-image: url('images/feed-icons/money-plus.svg'), url('images/feed-icons/feed-circle.svg');}
.money-minus        {background-image: url('images/feed-icons/money-minus.svg'), url('images/feed-icons/feed-circle.svg');}
.get-out-card       {background-image: url('images/feed-icons/get-out-card.svg'), url('images/feed-icons/feed-circle.svg');}
.go-to-jail         {background-image: url('images/feed-icons/go-to-jail.svg'), url('images/feed-icons/feed-circle.svg');}
.advance            {background-image: url('images/feed-icons/advance.svg'), url('images/feed-icons/feed-circle.svg');}
.failed-jail-roll   {background-image: url('images/feed-icons/failed-jail-roll.svg'), url('images/feed-icons/feed-circle.svg');}
.doubles            {background-image: url('images/feed-icons/doubles.svg'), url('images/feed-icons/feed-circle.svg');}
.doubles-2nd        {background-image: url('images/feed-icons/doubles-2nd.svg'), url('images/feed-icons/feed-circle.svg');}
.out-of-jail        {background-image: url('images/feed-icons/out-of-jail.svg'), url('images/feed-icons/feed-circle.svg');}
.rent               {background-image: url('images/feed-icons/rent.svg'), url('images/feed-icons/feed-circle.svg');}
.doubles-out-of-jail{background-image: url('images/feed-icons/doubles-out-of-jail.svg'), url('images/feed-icons/feed-circle.svg');}
.buy-property       {background-image: url('images/feed-icons/buy-property.svg'), url('images/feed-icons/feed-circle.svg');}


/* Testing panel -------------------------------------------------------------*/

#testing-panel,
#testing-toggle-panel{
    background: $black;
    color: #fff;
    padding: 10px;
}

#testing-panel{
    position: fixed;
    top: 0;
    right: 0;
    left: 0;
    z-index: 999;
}

body:not(.testing-panel-enabled) #testing-panel{
    display: none;
}

#testing-toggle-panel{
    position: fixed;
    right: 0;
    top: 0;
    z-index: 1000;
    justify-content: space-around;
    display: flex;
}